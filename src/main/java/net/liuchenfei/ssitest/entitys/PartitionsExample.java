package net.liuchenfei.ssitest.entitys;

import java.util.ArrayList;
import java.util.List;

public class PartitionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table partitions
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table partitions
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table partitions
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public PartitionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table partitions
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPartitionIdIsNull() {
            addCriterion("partition_id is null");
            return (Criteria) this;
        }

        public Criteria andPartitionIdIsNotNull() {
            addCriterion("partition_id is not null");
            return (Criteria) this;
        }

        public Criteria andPartitionIdEqualTo(String value) {
            addCriterion("partition_id =", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdNotEqualTo(String value) {
            addCriterion("partition_id <>", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdGreaterThan(String value) {
            addCriterion("partition_id >", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdGreaterThanOrEqualTo(String value) {
            addCriterion("partition_id >=", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdLessThan(String value) {
            addCriterion("partition_id <", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdLessThanOrEqualTo(String value) {
            addCriterion("partition_id <=", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdLike(String value) {
            addCriterion("partition_id like", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdNotLike(String value) {
            addCriterion("partition_id not like", value, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdIn(List<String> values) {
            addCriterion("partition_id in", values, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdNotIn(List<String> values) {
            addCriterion("partition_id not in", values, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdBetween(String value1, String value2) {
            addCriterion("partition_id between", value1, value2, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIdNotBetween(String value1, String value2) {
            addCriterion("partition_id not between", value1, value2, "partitionId");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexIsNull() {
            addCriterion("partition_index is null");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexIsNotNull() {
            addCriterion("partition_index is not null");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexEqualTo(Integer value) {
            addCriterion("partition_index =", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexNotEqualTo(Integer value) {
            addCriterion("partition_index <>", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexGreaterThan(Integer value) {
            addCriterion("partition_index >", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexGreaterThanOrEqualTo(Integer value) {
            addCriterion("partition_index >=", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexLessThan(Integer value) {
            addCriterion("partition_index <", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexLessThanOrEqualTo(Integer value) {
            addCriterion("partition_index <=", value, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexIn(List<Integer> values) {
            addCriterion("partition_index in", values, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexNotIn(List<Integer> values) {
            addCriterion("partition_index not in", values, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexBetween(Integer value1, Integer value2) {
            addCriterion("partition_index between", value1, value2, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionIndexNotBetween(Integer value1, Integer value2) {
            addCriterion("partition_index not between", value1, value2, "partitionIndex");
            return (Criteria) this;
        }

        public Criteria andPartitionLocIsNull() {
            addCriterion("partition_loc is null");
            return (Criteria) this;
        }

        public Criteria andPartitionLocIsNotNull() {
            addCriterion("partition_loc is not null");
            return (Criteria) this;
        }

        public Criteria andPartitionLocEqualTo(String value) {
            addCriterion("partition_loc =", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocNotEqualTo(String value) {
            addCriterion("partition_loc <>", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocGreaterThan(String value) {
            addCriterion("partition_loc >", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocGreaterThanOrEqualTo(String value) {
            addCriterion("partition_loc >=", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocLessThan(String value) {
            addCriterion("partition_loc <", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocLessThanOrEqualTo(String value) {
            addCriterion("partition_loc <=", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocLike(String value) {
            addCriterion("partition_loc like", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocNotLike(String value) {
            addCriterion("partition_loc not like", value, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocIn(List<String> values) {
            addCriterion("partition_loc in", values, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocNotIn(List<String> values) {
            addCriterion("partition_loc not in", values, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocBetween(String value1, String value2) {
            addCriterion("partition_loc between", value1, value2, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andPartitionLocNotBetween(String value1, String value2) {
            addCriterion("partition_loc not between", value1, value2, "partitionLoc");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("file_id is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("file_id is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(String value) {
            addCriterion("file_id =", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(String value) {
            addCriterion("file_id <>", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(String value) {
            addCriterion("file_id >", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(String value) {
            addCriterion("file_id >=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(String value) {
            addCriterion("file_id <", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(String value) {
            addCriterion("file_id <=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLike(String value) {
            addCriterion("file_id like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotLike(String value) {
            addCriterion("file_id not like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<String> values) {
            addCriterion("file_id in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<String> values) {
            addCriterion("file_id not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(String value1, String value2) {
            addCriterion("file_id between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(String value1, String value2) {
            addCriterion("file_id not between", value1, value2, "fileId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table partitions
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table partitions
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}